apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "alex.com.myplaces"
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    buildTypes {

        debug {
            buildConfigField("String", "hereBaseUrl", "\"https://places.demo.api.here.com\"")
            buildConfigField("String", "hereAppId", "\"wwQs2PiN302rlUhwRBtv\"")
            buildConfigField("String", "hereAppCode", "\"OaX5ICu1zAd1ZurpGhzlrg\"")
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField("String", "hereBaseUrl", "\"https://places.demo.api.here.com\"")
            buildConfigField("String", "hereAppId", "\"wwQs2PiN302rlUhwRBtv\"")
            buildConfigField("String", "hereAppCode", "\"OaX5ICu1zAd1ZurpGhzlrg\"")
        }
    }

    dataBinding {
        enabled = true
    }

    packagingOptions {
        pickFirst 'lib/x86/libanalytics_jni.so'
        pickFirst 'lib/armeabi-v7a/libanalytics_jni.so'
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    compile(name: 'HERE-sdk', ext: 'aar') {
        exclude group: 'com.android.support'
    }
    implementation "com.android.support:support-v4:${rootProject.ext.supportLibVersion}"
    implementation "com.android.support:appcompat-v7:${rootProject.ext.supportLibVersion}"
    implementation "com.android.support:design:${rootProject.ext.supportLibVersion}"
    implementation "com.android.support.constraint:constraint-layout:${rootProject.ext.constraintLayoutVersion}"
    implementation "com.android.support:multidex:${rootProject.ext.multidexVersion}"

    implementation "android.arch.lifecycle:extensions:${rootProject.ext.architectureVersion}"
    annotationProcessor "android.arch.lifecycle:compiler:${rootProject.ext.architectureVersion}"

    implementation "com.google.code.gson:gson:${rootProject.ext.gsonVersion}"
    implementation "com.android.volley:volley:${rootProject.ext.volleyVersion}"
    implementation "org.apache.commons:commons-lang3:${rootProject.ext.apacheCommonsLangVersion}"

    testImplementation "junit:junit:${rootProject.ext.jUnitVersion}"
    testImplementation "org.mockito:mockito-core:${rootProject.ext.mockitoVersion}"
    testImplementation "org.powermock:powermock-module-junit4:${rootProject.ext.powermockVersion}"
    testImplementation "org.powermock:powermock-module-junit4-rule:${rootProject.ext.powermockVersion}"
    testImplementation "org.powermock:powermock-api-mockito2:${rootProject.ext.powermockVersion}"
    testImplementation "android.arch.core:core-testing:${rootProject.ext.architectureVersion}"

    androidTestImplementation "com.android.support.test:runner:${rootProject.ext.runnerTestVersion}"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:${rootProject.ext.espressoVersion}"
}
